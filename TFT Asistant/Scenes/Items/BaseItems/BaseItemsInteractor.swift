//
//  BaseItemsInteractor.swift
//  TFT Asistant
//
//  Created by erdem on 6.10.2019.
//  Copyright (c) 2019 Erdem Isguder. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BaseItemsBusinessLogic
{
    func getBaseItems(request: BaseItems.GetBaseItems.Request)
    func getBuildableItems(request: BaseItems.GetCombinedItems.Request)
}

protocol BaseItemsDataStore
{
    var baseItems: [Item]? {get set}
}

class BaseItemsInteractor: BaseItemsBusinessLogic, BaseItemsDataStore
{
    var presenter: BaseItemsPresentationLogic?
    let worker: BaseItemsWorker = BaseItemsWorker(itemsUseCase: UseCaseProvider().makeItemsUseCase() as! ItemsUseCase)
    
    var baseItems: [Item]?
  
    // MARK: Do something
  
    func getBaseItems(request: BaseItems.GetBaseItems.Request) {
        let response = worker.getBaseItems()
        baseItems = response.items
        
        if response.items != nil {
            presenter?.presentBaseItems(response: response)
        }
    }
    
    func getBuildableItems(request: BaseItems.GetCombinedItems.Request) {
        let response = worker.getBuildableItems(request: request)
        presenter?.presentCombinedItems(response: response)
    }
}
