//
//  CombinationsInteractor.swift
//  TFT Asistant
//
//  Created by erdem on 3.10.2019.
//  Copyright (c) 2019 Erdem Isguder. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CombinationsBusinessLogic
{
    func getItems(request: Combinations.GetItems.Request)
    func getSelectedItemDetail(request: Combinations.GetItemByKey.Request)
}

protocol CombinationsDataStore
{
    var items: [Item]? { get set }
}

class CombinationsInteractor: CombinationsBusinessLogic, CombinationsDataStore
{
    var presenter: CombinationsPresentationLogic?
    var worker: CombinationsWorker = CombinationsWorker(itemsUseCase: UseCaseProvider().makeItemsUseCase() as! ItemsUseCase)
    
    var items: [Item]?
    
    func getItems(request: Combinations.GetItems.Request) {
        let allItems = worker.itemsUseCase.getItems()
        self.items = allItems
        let combinedItems = allItems?.filter({ $0.buildsFrom != nil})
        let response = Combinations.GetItems.Response(items: combinedItems)
        presenter?.presentAllItems(response: response)
    }
    
    func getSelectedItemDetail(request: Combinations.GetItemByKey.Request) {
        guard let itemList = items else{
            return
        }
        
        let choosed = itemList.first{
            $0.key == request.key
        }
        
        guard var choosedItem = choosed else{
            return
        }
        
        let itemStats = getStats(keys: choosedItem.buildsFrom)
        
        choosedItem.stats = itemStats
        
        presenter?.presentSelectedItemDetail(response: Combinations.GetItemByKey.Response(item: choosedItem))
    }
    
    private func getStats(keys: [String]?) -> [ItemStat]?{
        guard let itemKeys = keys else{
            return nil
        }
        
        var itemStats = [ItemStat]()
        
        items?.forEach({ item in
            itemKeys.forEach({ x in
                if item.key == x {
                    if let stats = item.stats{
                        itemStats += stats
                    }
                }
            })
        })
        
        return itemStats
    }
}
