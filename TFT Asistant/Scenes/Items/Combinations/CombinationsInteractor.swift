//
//  CombinationsInteractor.swift
//  TFT Asistant
//
//  Created by erdem on 3.10.2019.
//  Copyright (c) 2019 Erdem Isguder. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import LocalPlatform
import Domain

protocol CombinationsBusinessLogic
{
    func getItems(request: Combinations.GetItems.Request)
    func getItemBy(name request: Combinations.GetItemByName.Request)
    func getItemBy(key request: Combinations.GetItemByKey.Request)
}

protocol CombinationsDataStore
{
    var items: [Item]? { get set }
}

class CombinationsInteractor: CombinationsBusinessLogic, CombinationsDataStore
{
    var presenter: CombinationsPresentationLogic?
    var worker: CombinationsWorker = CombinationsWorker(itemsUseCase: LocalPlatform.UseCaseProvider().makeItemsUseCase())
    
    var items: [Item]?
    
    func getItems(request: Combinations.GetItems.Request) {
        let response = Combinations.GetItems.Response(items: worker.itemsUseCase.getItems())
        self.items = response.items
        presenter?.presentAllItems(response: response)
    }
    
    func getItemBy(name request: Combinations.GetItemByName.Request) {
        
    }
    
    func getItemBy(key request: Combinations.GetItemByKey.Request) {

    }
  
}
