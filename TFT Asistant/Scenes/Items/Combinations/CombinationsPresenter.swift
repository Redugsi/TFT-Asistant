//
//  CombinationsPresenter.swift
//  TFT Asistant
//
//  Created by erdem on 3.10.2019.
//  Copyright (c) 2019 Erdem Isguder. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CombinationsPresentationLogic
{
    func presentAllItems(response: Combinations.GetItems.Response)
    func presentSelectedItemDetail(response: Combinations.GetItemByKey.Response)
}

class CombinationsPresenter: CombinationsPresentationLogic
{
    weak var viewController: CombinationsDisplayLogic?
  
    func presentAllItems(response: Combinations.GetItems.Response) {
        if let items = response.items{
            let itemViewModels = items.map({Combinations.ItemViewModel(name: $0.name, key: $0.key
                , stats: nil, kind: $0.kind, buildsInto: $0.buildsInto, buildsFrom: $0.buildsFrom, champs: $0.champs, bonus: $0.bonus)})
            
            viewController?.displayItems(viewModel: Combinations.ItemsViewModel(itemsViewModel: itemViewModels))
        }
    }
    
    func presentSelectedItemDetail(response: Combinations.GetItemByKey.Response) {
        if let item = response.item{
            let statViewModels = item.stats?.map({ItemStatType(type: $0.name, amount: $0.amount)?.builder()})
            
            let detailViewModel = ItemCombinationDetailViewModel(name: item.name, combinedImageName: item.key, firstImageName: item.buildsFrom?[0], secondImageName: item.buildsFrom?[1], bonus: item.bonus, statViewModels: statViewModels)
            
            viewController?.displaySelectedItemDetail(viewModel: detailViewModel)
        }
    }
}
