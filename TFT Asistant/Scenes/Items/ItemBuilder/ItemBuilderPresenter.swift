//
//  ItemBuilderPresenter.swift
//  TFT Asistant
//
//  Created by erdem on 7.10.2019.
//  Copyright (c) 2019 Erdem Isguder. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ItemBuilderPresentationLogic
{
    func presentBaseItems(response: ItemBuilder.GetBaseItems.Response)
    func presentCombinedItems(response: ItemBuilder.GetCombinedItems.Response)
}

class ItemBuilderPresenter: ItemBuilderPresentationLogic
{
  weak var viewController: ItemBuilderDisplayLogic?
  
  // MARK: Do something
  
    func presentBaseItems(response: ItemBuilder.GetBaseItems.Response) {
        guard let baseItems = response.items else{
            return
        }
        
        let baseItemViewModels = baseItems.map({
            ItemModels.BaseItemViewModel(key: $0.key, name: $0.name, bonus: $0.bonus)
        })
        
        let baseItemsViewModel = ItemModels.BaseItemsViewModel(viewModels: baseItemViewModels)
        
        viewController?.displayBaseItems(baseItems: baseItemsViewModel)
    }
    
    func presentCombinedItems(response: ItemBuilder.GetCombinedItems.Response) {
        if let combinedItems = response.items{
            
        }
    }
}
